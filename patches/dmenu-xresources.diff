--- dmenu.c	2024-05-04 18:07:52.557360722 +0800
+++ dmenu-xresources.c	2024-05-04 18:08:27.187359648 +0800
@@ -15,6 +15,7 @@
 #include <X11/extensions/Xinerama.h>
 #endif
 #include <X11/Xft/Xft.h>
+#include <X11/Xresource.h>
 
 #include "drw.h"
 #include "util.h"
@@ -52,6 +53,10 @@
 static Drw *drw;
 static Clr *scheme[SchemeLast];
 
+/* Temporary arrays to allow overriding xresources values */
+static char *colortemp[4];
+static char *tempfonts;
+
 #include "config.h"
 
 static int (*fstrncmp)(const char *, const char *, size_t) = strncmp;
@@ -626,8 +631,13 @@
 	int a, di, n, area = 0;
 #endif
 	/* init appearance */
-	for (j = 0; j < SchemeLast; j++)
-		scheme[j] = drw_scm_create(drw, colors[j], 2);
+	for (j = 0; j < SchemeLast; j++) {
+        scheme[j] = drw_scm_create(drw, (const char**)colors[j], 2);
+    }
+    for (j = 0; j < SchemeOut; ++j) {
+        for (i = 0; i < 2; ++i)
+            free(colors[j][i]);
+    }
 
 	clip = XInternAtom(dpy, "CLIPBOARD",   False);
 	utf8 = XInternAtom(dpy, "UTF8_STRING", False);
@@ -719,6 +729,41 @@
 	    "             [-nb color] [-nf color] [-sb color] [-sf color] [-w windowid]");
 }
 
+void
+readxresources(void) {
+    XrmInitialize();
+
+    char* xrm;
+    if ((xrm = XResourceManagerString(drw->dpy))) {
+        char *type;
+        XrmDatabase xdb = XrmGetStringDatabase(xrm);
+        XrmValue xval;
+
+        if (XrmGetResource(xdb, "dmenu.font", "*", &type, &xval))
+            fonts[0] = strdup(xval.addr);
+        else
+            fonts[0] = strdup(fonts[0]);
+        if (XrmGetResource(xdb, "dmenu.background", "*", &type, &xval))
+            colors[SchemeNorm][ColBg] = strdup(xval.addr);
+        else
+            colors[SchemeNorm][ColBg] = strdup(colors[SchemeNorm][ColBg]);
+        if (XrmGetResource(xdb, "dmenu.foreground", "*", &type, &xval))
+            colors[SchemeNorm][ColFg] = strdup(xval.addr);
+        else
+            colors[SchemeNorm][ColFg] = strdup(colors[SchemeNorm][ColFg]);
+        if (XrmGetResource(xdb, "dmenu.selbackground", "*", &type, &xval))
+            colors[SchemeSel][ColBg] = strdup(xval.addr);
+        else
+            colors[SchemeSel][ColBg] = strdup(colors[SchemeSel][ColBg]);
+        if (XrmGetResource(xdb, "dmenu.selforeground", "*", &type, &xval))
+            colors[SchemeSel][ColFg] = strdup(xval.addr);
+        else
+            colors[SchemeSel][ColFg] = strdup(colors[SchemeSel][ColFg]);
+
+        XrmDestroyDatabase(xdb);
+    }
+}
+
 int
 main(int argc, char *argv[])
 {
@@ -747,15 +792,15 @@
 		else if (!strcmp(argv[i], "-p"))   /* adds prompt to left of input field */
 			prompt = argv[++i];
 		else if (!strcmp(argv[i], "-fn"))  /* font or font set */
-			fonts[0] = argv[++i];
+			tempfonts = argv[++i];
 		else if (!strcmp(argv[i], "-nb"))  /* normal background color */
-			colors[SchemeNorm][ColBg] = argv[++i];
+			colortemp[0] = argv[++i];
 		else if (!strcmp(argv[i], "-nf"))  /* normal foreground color */
-			colors[SchemeNorm][ColFg] = argv[++i];
+			colortemp[1] = argv[++i];
 		else if (!strcmp(argv[i], "-sb"))  /* selected background color */
-			colors[SchemeSel][ColBg] = argv[++i];
+			colortemp[2] = argv[++i];
 		else if (!strcmp(argv[i], "-sf"))  /* selected foreground color */
-			colors[SchemeSel][ColFg] = argv[++i];
+			colortemp[3] = argv[++i];
 		else if (!strcmp(argv[i], "-w"))   /* embedding window id */
 			embed = argv[++i];
 		else
@@ -773,8 +818,23 @@
 		die("could not get embedding window attributes: 0x%lx",
 		    parentwin);
 	drw = drw_create(dpy, screen, root, wa.width, wa.height);
-	if (!drw_fontset_create(drw, fonts, LENGTH(fonts)))
+	readxresources();
+    /* Now we check whether to override xresources with commandline parameters */
+    if ( tempfonts )
+        fonts[0] = strdup(tempfonts);
+    if ( colortemp[0])
+        colors[SchemeNorm][ColBg] = strdup(colortemp[0]);
+    if ( colortemp[1])
+        colors[SchemeNorm][ColFg] = strdup(colortemp[1]);
+    if ( colortemp[2])
+        colors[SchemeSel][ColBg]  = strdup(colortemp[2]);
+    if ( colortemp[3])
+        colors[SchemeSel][ColFg]  = strdup(colortemp[3]);
+
+    if (!drw_fontset_create(drw, (const char**)fonts, LENGTH(fonts)))
 		die("no fonts could be loaded.");
+
+    free(fonts[0]);
 	lrpad = drw->fonts->h;
 
 #ifdef __OpenBSD__
